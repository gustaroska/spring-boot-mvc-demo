server:
  port: 9000
  servlet:
    context-path: /app
spring:
  redis:
    host: localhost
    port: 6379
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: ${app.sec.public-key-location}
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  datasource:
    url: ${app.config.db.url}
    username: ${app.config.db.username}
    password: ${app.config.db.password}
    driver-class-name: ${app.config.db.driver}
  jpa:
    hibernate:
      ddl-auto: update
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
  mail:
    host: ${app.config.mail.hostname}
    username: ${app.config.mail.username}
    password: ${app.config.mail.password}
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
mybatis:
    mapper-locations: classpath:mapper/*.xml
    type-aliases-package: com.demo.model
    configuration:
        map-underscore-to-camel-case: true
        default-fetch-size: 100
        default-statement-timeout: 30